
var CntrlFrec;

function setup() {
  createCanvas(400, 400, WEBGL);

  CntrlFrec = createSlider(0.5, 3.0, 1, 0.1);
  CntrlFrec.position(10, 10);
  createEasyCam();
  document.oncontextmenu = () => false;
    stroke(180);
  
  let log;
  let line = new Array(7);
  line[0]="solid AssimpScene";
  line[1]=" facet normal 0 0 0";
  line[2]="  outer loop";
  line[3]="  vertex ";
  line[4]="  endloop ";
  line[5]=" endfacet ";
  line[6]="endsolidAssimpScene";
}

function draw() {
  background(256, 0, 100);
  let p = createVector(0, 0);
  let r = 150;
  let cant = 35
  let frec = CntrlFrec.value();
  let altura = 15;
  translate(0, 200, -200);
  rotateX(1);

  beginShape(TRIANGLE_STRIP);

  for (let a = 0; a <= TWO_PI+0.1; a = a + TWO_PI / cant) {
    vertex(p.x, p.y);
    vertex(p.x + cos(a) * r, p.y + sin(a) * r);
  }
  endShape();

  for (let i = 0; i <= 30; i = i + 1) {
    beginShape(TRIANGLE_STRIP);

    for (let a = 0; a <= TWO_PI+0.1; a = a + TWO_PI / cant) {
      let r2 = r * (sin((i * TWO_PI*frec) / 30) * 0.5 + 1);
      let np = createVector(p.x + cos(a) * r2, p.y + sin(a) * r2);
      vertex(np.x, np.y, altura * i);

      let r3 = r * (sin(((i + 1) * TWO_PI*frec) / 30) * 0.5 + 1);
      let np2 = createVector(p.x + cos(a) * r3, p.y + sin(a) * r3);

      vertex(np2.x, np2.y, altura * (i + 1));
    }

    endShape();
  }
}


function GenerarLoop(v1, v2, v3) {
  log.append(line[1]);
  log.append(line[2]);
  log.append(line[3]+v1.x+" " +v1.y+" "+v1.z);
  log.append(line[3]+v2.x+" " +v2.y+" "+v2.z);
  log.append(line[3]+v3.x+" " +v3.y+" "+v3.z);
  log.append(line[4]);
  log.append(line[5]);
}

function keyPressed(){
  
  GenerarLoop();
  download("test.txt",text);
}



function download(filename, text) {
  log.append(line[6]);
  let string_vector;
  for (i=0; i<log.size; i++) {
    string_vector[i]=log.get(i);
  }
  saveStrings("ModeloSSTL.stl", string_vector);
}